{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/hooks-memo.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo, memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HookMemo = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [products, setProducts] = useState([]);\n\n  const handleSubmit = () => {\n    setProducts([...products, {\n      name,\n      price: parseInt(price)\n    }]);\n  };\n\n  const total = ude;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px 32px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      placeholder: \"Enter name...\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        margin: \"20px 0px\"\n      },\n      value: price,\n      placeholder: \"Enter price...\",\n      onChange: e => setPrice(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), \"Total: \", total, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          listStyle: \"none\",\n          color: \"red\"\n        },\n        children: [product.name, \" - \", product.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HookMemo, \"MbhgKhqen+l6DkTe6Nh6OurNo+c=\");\n\n_c = HookMemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookMemo\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/hooks-memo.js"],"names":["useState","useMemo","memo","HookMemo","name","setName","price","setPrice","products","setProducts","handleSubmit","parseInt","total","ude","padding","e","target","value","margin","map","product","index","listStyle","color"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,IAA5B,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,CACR,GAAGD,QADK,EAER;AACIJ,MAAAA,IADJ;AAEIE,MAAAA,KAAK,EAAEK,QAAQ,CAACL,KAAD;AAFnB,KAFQ,CAAD,CAAX;AAOH,GARD;;AASA,QAAMM,KAAK,GAAGC,GAAd;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACI;AACI,MAAA,KAAK,EAAEV,IADX;AAEI,MAAA,WAAW,EAAC,eAFhB;AAGI,MAAA,QAAQ,EAAGW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAEZ,KAFX;AAGI,MAAA,WAAW,EAAC,gBAHhB;AAII,MAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAQ,MAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,aAgBYE,KAhBZ,eAiBI;AAAA,gBACKJ,QAAQ,CAACW,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBACV;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAX;AAAA,mBACKH,OAAO,CAAChB,IADb,SACsBgB,OAAO,CAACd,KAD9B;AAAA,SAAqDe,KAArD;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5CM;;GAAMlB,Q;;KAAAA,Q","sourcesContent":["import { useState, useMemo, memo } from \"react\";\n\nexport const HookMemo = () => {\n    const [name, setName] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [products, setProducts] = useState([]);\n\n    const handleSubmit = () => {\n        setProducts([\n            ...products,\n            {\n                name,\n                price: parseInt(price),\n            },\n        ]);\n    };\n    const total = ude\n     \n    \n    return (\n        <div style={{ padding: \"10px 32px\" }}>\n            <input\n                value={name}\n                placeholder=\"Enter name...\"\n                onChange={(e) => setName(e.target.value)}\n            />\n            <br />\n            <input\n                style={{ margin: \"20px 0px\" }}\n                value={price}\n                placeholder=\"Enter price...\"\n                onChange={(e) => setPrice(e.target.value)}\n            />\n            <br />\n            <button onClick={handleSubmit}>Add</button>\n            <br />\n            Total: {total}\n            <ul>\n                {products.map((product, index) => (\n                    <li style={{ listStyle: \"none\", color: \"red\" }} key={index}>\n                        {product.name} - {product.price}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
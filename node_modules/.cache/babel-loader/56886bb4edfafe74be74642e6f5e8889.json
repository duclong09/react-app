{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport { tab } from \"@testing-library/user-event/dist/tab\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = [\"todos\", \"comments\", \"albums\", \"photos\", \"users\"];\nexport const Content = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [type, setType] = useState('todos');\n  console.log(type);\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${type}`).then(res => res.json()).then(todos => {\n      setTodos(todos);\n    });\n  }, [type]); //Dom event listener\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(window.sc);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n      style: type === tab ? {\n        color: '#fff',\n        backgroundColor: '#333'\n      } : {},\n      onClick: () => setType(tab),\n      children: tab\n    }, tab, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.title || todo.name\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Content, \"lAYr5vd4h9LycjRF0ZZvU+glNMI=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/Content.js"],"names":["tab","useEffect","useState","tabs","Content","title","setTitle","todos","setTodos","type","setType","console","log","fetch","then","res","json","handleScroll","window","sc","addEventListener","map","color","backgroundColor","e","target","value","todo","name","id"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,sCAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,IAAI,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAA+B,QAA/B,EAAwC,OAAxC,CAAb;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,OAAD,CAA/B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAE,wCAAuCJ,IAAK,EAA9C,CAAL,CACGK,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESP,KAAD,IAAW;AACfC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAJH;AAKD,GANQ,EAMN,CAACE,IAAD,CANM,CAAT,CAP2B,CAgB3B;;AACAR,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMgB,YAAY,GAAG,MAAM;AACvBN,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACC,EAAnB;AACH,KAFD;;AAGAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACD,GALQ,EAKP,EALO,CAAT;AAOA,sBACE;AAAA,eACGd,IAAI,CAACkB,GAAL,CAAUrB,GAAD,iBACR;AAEI,MAAA,KAAK,EAAES,IAAI,KAAKT,GAAT,GAAe;AAClBsB,QAAAA,KAAK,EAAE,MADW;AAElBC,QAAAA,eAAe,EAAE;AAFC,OAAf,GAGJ,EALP;AAMI,MAAA,OAAO,EAAE,MAAMb,OAAO,CAACV,GAAD,CAN1B;AAAA,gBAQCA;AARD,OACSA,GADT;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAaE;AAAO,MAAA,KAAK,EAAEK,KAAd;AAAqB,MAAA,QAAQ,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,YAbF,eAeE;AAAA,gBACGnB,KAAK,CAACc,GAAN,CAAWM,IAAD,iBACT;AAAA,kBAAmBA,IAAI,CAACtB,KAAL,IAAcsB,IAAI,CAACC;AAAtC,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/CM;;GAAMzB,O;;KAAAA,O","sourcesContent":["import { tab } from \"@testing-library/user-event/dist/tab\";\nimport { useEffect, useState } from \"react\";\n\nconst tabs = [\"todos\", \"comments\", \"albums\",\"photos\",\"users\"]\n\nexport const Content = () => {\n   \n  const [title, setTitle] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [type,setType] = useState('todos')\n  console.log(type)\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${type}`)\n      .then((res) => res.json())\n      .then((todos) => {\n        setTodos(todos);\n      });\n  }, [type]);\n\n\n  //Dom event listener\n  useEffect(()=> {\n    const handleScroll = () => {\n        console.log(window.sc)\n    }\n    window.addEventListener('scroll', handleScroll)\n  },[])\n\n  return (\n    <div>\n      {tabs.map((tab) => (\n        <button \n            key={tab}\n            style={type === tab ? {\n                color: '#fff',\n                backgroundColor: '#333'\n            }: {}}\n            onClick={() => setType(tab)}\n        >\n        {tab}\n        </button>\n      ))}\n      <input value={title} onChange={(e) => setTitle(e.target.value)} />\n\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>{todo.title || todo.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
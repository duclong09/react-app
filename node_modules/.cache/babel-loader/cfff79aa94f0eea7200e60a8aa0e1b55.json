{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/useref.js\",\n    _s = $RefreshSig$();\n\n//lưu các giá trị của 1 tham chiếu bên ngoài\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UseRef() {\n  _s();\n\n  const [count, setCount] = useState(60);\n  const timerID = useRef();\n  const prevCount = useRef();\n  const h1Ref = useRef();\n  useEffect(() => {\n    prevCount.current = count;\n  }, [count]);\n  useEffect(() => {});\n\n  const handleStart = () => {\n    timerID.current = setInterval(() => {\n      setCount(prevCount => prevCount - 1);\n    }, 1000);\n    console.log('start', timerID.current);\n  };\n\n  const handleStop = () => {\n    clearInterval(timerID.current);\n    console.log('stop', timerID.current);\n  };\n\n  console.log(count, prevCount.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      ref: h1Ref,\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UseRef, \"Ssg+gW/+45tuOtHtu6yGPrFh7ng=\");\n\n_c = UseRef;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRef\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/useref.js"],"names":["useRef","useState","useEffect","UseRef","count","setCount","timerID","prevCount","h1Ref","current","handleStart","setInterval","console","log","handleStop","clearInterval","padding"],"mappings":";;;AAAA;AAEA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,OAA3C;;AAOA,OAAO,SAASC,MAAT,GAAiB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC;AAGA,QAAMK,OAAO,GAAGN,MAAM,EAAtB;AACA,QAAMO,SAAS,GAAGP,MAAM,EAAxB;AACA,QAAMQ,KAAK,GAAGR,MAAM,EAApB;AAEAE,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,SAAS,CAACE,OAAV,GAAoBL,KAApB;AACD,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIAF,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,CAAT;;AAIA,QAAMQ,WAAW,GAAG,MAAI;AACpBJ,IAAAA,OAAO,CAACG,OAAR,GAAkBE,WAAW,CAAC,MAAM;AAChCN,MAAAA,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACH,KAF4B,EAE1B,IAF0B,CAA7B;AAGAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,OAAO,CAACG,OAA7B;AACH,GALD;;AAOA,QAAMK,UAAU,GAAG,MAAI;AACnBC,IAAAA,aAAa,CAACT,OAAO,CAACG,OAAT,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,OAAO,CAACG,OAA5B;AACH,GAHD;;AAKAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAkBG,SAAS,CAACE,OAA5B;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA,4BACI;AAAI,MAAA,GAAG,EAAER,KAAT;AAAA,gBAAiBJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GApCeX,M;;KAAAA,M","sourcesContent":["//lưu các giá trị của 1 tham chiếu bên ngoài\n\nimport { useRef, useState, useEffect} from \"react\"\n\n\n\n\n\n\nexport function UseRef(){\n    const [count,setCount] = useState(60)\n\n   \n    const timerID = useRef()\n    const prevCount = useRef()\n    const h1Ref = useRef()\n\n    useEffect(()=>{\n      prevCount.current = count\n    },[count])\n\n    useEffect(()=>{\n        \n    })\n    \n    const handleStart = ()=>{\n        timerID.current = setInterval(() => {\n            setCount(prevCount => prevCount - 1)\n        }, 1000);\n        console.log('start', timerID.current);\n    }\n\n    const handleStop = ()=>{\n        clearInterval(timerID.current)\n        console.log('stop', timerID.current)\n    }\n\n    console.log(count,prevCount.current)\n    return(\n        <div style={{padding: 20}}>\n            <h1 ref={h1Ref}>{count}</h1>\n            <button onClick={handleStart}>Start</button>\n            <button onClick={handleStop}>Stop</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
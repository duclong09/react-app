{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/Todo/index.js\",\n    _s = $RefreshSig$();\n\n//useReducer\nimport { useReducer, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = {\n  color: \"red\",\n  fontSize: \"20px\"\n};\nconst span = {\n  cursor: 'pointer'\n};\nconst styleDiv = {\n  padding: '0 20px'\n}; //1.inti state\n\nconst initState = {\n  job: \"\",\n  //giá tri khởi tạo job\n  jobs: [] // giá tri hiển thi list todo list\n\n}; //2.action\n\nconst SET_JOB = \"set_job\";\nconst ADD_JOB = \"add_job\";\nconst DELETE_JOB = \"delete_job\"; //payload goi là dự liệu mang theo đi hay còn goi là dữ lieu đầu vào.\n\nconst setJob = payload => {\n  return {\n    type: SET_JOB,\n    payload: payload\n  };\n};\n\nconst addJob = payload => {\n  return {\n    type: ADD_JOB,\n    payload: payload\n  };\n};\n\nconst deleteJob = payload => {\n  return {\n    type: DELETE_JOB,\n    payload: payload\n  };\n}; //3. reducer\n\n\nconst reducer = (state, action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_JOB:\n      newState = { ...state,\n        job: action.payload\n      };\n      break;\n\n    case ADD_JOB:\n      newState = { ...state,\n        jobs: [...state.jobs, action.payload]\n      };\n      break;\n\n    case DELETE_JOB:\n      const newJob = [...state.jobs];\n      newJob.splice(action.payload, 1);\n      newState = { ...state,\n        jobs: newJob\n      };\n      break;\n\n    default:\n      throw new Error(\"Invalid action\");\n  }\n\n  return newState;\n}; //4.dispatch\n\n\nfunction TodoApp() {\n  _s();\n\n  //\n  const [state, dispatch] = useReducer(reducer, initState); //destructuring \n\n  const {\n    job,\n    jobs\n  } = state;\n  const inputRef = useRef(); //\n\n  const handleSubmit = () => {\n    dispatch(addJob(job));\n    dispatch(setJob(\"\"));\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styleDiv,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: title,\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: job,\n      placeholder: \"Enter todo...\",\n      onChange: e => {\n        dispatch(setJob(e.target.value));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [job, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: span,\n          onClick: () => dispatch(deleteJob(index)),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoApp, \"CejCuzA6VSoTBHG/kItm6zMmguM=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/Todo/index.js"],"names":["useReducer","useRef","title","color","fontSize","span","cursor","styleDiv","padding","initState","job","jobs","SET_JOB","ADD_JOB","DELETE_JOB","setJob","payload","type","addJob","deleteJob","reducer","state","action","newState","newJob","splice","Error","TodoApp","dispatch","inputRef","handleSubmit","current","focus","e","target","value","map","index"],"mappings":"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","sourcesContent":["//useReducer\nimport { useReducer, useRef } from \"react\";\n\nconst title = {\n  color: \"red\",\n  fontSize: \"20px\",\n};\n\nconst span = {\n    cursor: 'pointer' \n}\n\nconst styleDiv = {\n    padding: '0 20px'\n}\n//1.inti state\nconst initState = {\n  job: \"\", //giá tri khởi tạo job\n  jobs: [], // giá tri hiển thi list todo list\n};\n//2.action\nconst SET_JOB = \"set_job\";\nconst ADD_JOB = \"add_job\";\nconst DELETE_JOB = \"delete_job\";\n\n\n//payload goi là dự liệu mang theo đi hay còn goi là dữ lieu đầu vào.\nconst setJob = (payload) => {\n  return {\n    type: SET_JOB,\n    payload: payload,\n  };\n};\n\nconst addJob = (payload) => {\n  return {\n    type: ADD_JOB,\n    payload: payload,\n  };\n};\n\nconst deleteJob = (payload) => {\n  return {\n    type: DELETE_JOB,\n    payload: payload,\n  };\n};\n//3. reducer\nconst reducer = (state, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_JOB:\n      newState = {\n        ...state,\n        job: action.payload,\n      };\n      break;\n\n    case ADD_JOB:\n      newState = {\n        ...state,\n        jobs: [...state.jobs, action.payload],\n      };\n      break;\n\n    case DELETE_JOB:\n      const newJob = [...state.jobs];\n      newJob.splice(action.payload, 1);\n      newState = {\n        ...state,\n        jobs: newJob,\n      };\n      break;\n    default:\n      throw new Error(\"Invalid action\");\n  }\n  return newState;\n};\n\n\n\n//4.dispatch\nfunction TodoApp() {\n  //\n  const [state, dispatch] = useReducer(reducer, initState);\n  //destructuring \n  const { job, jobs } = state;\n  const inputRef = useRef();\n\n    //\n  const handleSubmit = () => {\n    dispatch(addJob(job));\n    dispatch(setJob(\"\"));\n    inputRef.current.focus();\n  };\n\n  return (\n    <div style={styleDiv}>\n      <h3 style={title}>Todo List</h3>\n      <input\n        ref={inputRef}\n        value={job}\n        placeholder=\"Enter todo...\"\n        onChange={(e) => {\n          dispatch(setJob(e.target.value));\n        }}\n      />\n      <button onClick={handleSubmit}>Add</button>\n      <ul>\n        {jobs.map((job, index) => (\n          <li key={index}>\n            {job}\n            <span style={span} onClick={() => dispatch(deleteJob(index))}>&times;</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoApp"]},"metadata":{},"sourceType":"module"}
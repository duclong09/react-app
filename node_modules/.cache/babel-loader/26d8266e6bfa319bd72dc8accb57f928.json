{"ast":null,"code":"// //useReducer\n// import { useReducer, useRef } from \"react\";\n// const title = {\n//   color: \"red\",\n//   fontSize: \"20px\",\n// };\n// const span = {\n//     cursor: 'pointer' \n// }\n// const styleDiv = {\n//     padding: '0 20px'\n// }\n// //1.inti state\n// const initState = {\n//   job: \"\", //giá tri khởi tạo job\n//   jobs: [], // giá tri hiển thi list todo list\n// };\n// //2.action\n// const SET_JOB = \"set_job\";\n// const ADD_JOB = \"add_job\";\n// const DELETE_JOB = \"delete_job\";\n// //payload goi là dự liệu mang theo đi hay còn goi là dữ lieu đầu vào.\n// const setJob = (payload) => {\n//   return {\n//     type: SET_JOB,\n//     payload: payload,\n//   };\n// };\n// const addJob = (payload) => {\n//   return {\n//     type: ADD_JOB,\n//     payload: payload,\n//   };\n// };\n// const deleteJob = (payload) => {\n//   return {\n//     type: DELETE_JOB,\n//     payload: payload,\n//   };\n// };\n// //3. reducer\n// const reducer = (state, action) => {\n//   let newState;\n//   switch (action.type) {\n//     case SET_JOB:\n//       newState = {\n//         ...state,\n//         job: action.payload,\n//       };\n//       break;\n//     case ADD_JOB:\n//       newState = {\n//         ...state,\n//         jobs: [...state.jobs, action.payload],\n//       };\n//       break;\n//     case DELETE_JOB:\n//       const newJob = [...state.jobs];\n//       newJob.splice(action.payload, 1);\n//       newState = {\n//         ...state,\n//         jobs: newJob,\n//       };\n//       break;\n//     default:\n//       throw new Error(\"Invalid action\");\n//   }\n//   return newState;\n// };\n// //4.dispatch\n// export function TodoReducer() {\n//   //\n//   const [state, dispatch] = useReducer(reducer, initState);\n//   //destructuring \n//   const { job, jobs } = state;\n//   const inputRef = useRef();\n//     //\n//   const handleSubmit = () => {\n//     dispatch(addJob(job));\n//     dispatch(setJob(\"\"));\n//     inputRef.current.focus();\n//   };\n//   return (\n//     <div style={styleDiv}>\n//       <h3 style={title}>Todo List</h3>\n//       <input\n//         ref={inputRef}\n//         value={job}\n//         placeholder=\"Enter todo...\"\n//         onChange={(e) => {\n//           dispatch(setJob(e.target.value));\n//         }}\n//       />\n//       <button onClick={handleSubmit}>Add</button>\n//       <ul>\n//         {jobs.map((job, index) => (\n//           <li key={index}>\n//             {job}\n//             <span style={span} onClick={() => dispatch(deleteJob(index))}>&times;</span>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/todo-app-list-reducer.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// //useReducer\n// import { useReducer, useRef } from \"react\";\n\n// const title = {\n//   color: \"red\",\n//   fontSize: \"20px\",\n// };\n\n// const span = {\n//     cursor: 'pointer' \n// }\n\n// const styleDiv = {\n//     padding: '0 20px'\n// }\n// //1.inti state\n// const initState = {\n//   job: \"\", //giá tri khởi tạo job\n//   jobs: [], // giá tri hiển thi list todo list\n// };\n// //2.action\n// const SET_JOB = \"set_job\";\n// const ADD_JOB = \"add_job\";\n// const DELETE_JOB = \"delete_job\";\n\n\n// //payload goi là dự liệu mang theo đi hay còn goi là dữ lieu đầu vào.\n// const setJob = (payload) => {\n//   return {\n//     type: SET_JOB,\n//     payload: payload,\n//   };\n// };\n\n// const addJob = (payload) => {\n//   return {\n//     type: ADD_JOB,\n//     payload: payload,\n//   };\n// };\n\n// const deleteJob = (payload) => {\n//   return {\n//     type: DELETE_JOB,\n//     payload: payload,\n//   };\n// };\n// //3. reducer\n// const reducer = (state, action) => {\n//   let newState;\n//   switch (action.type) {\n//     case SET_JOB:\n//       newState = {\n//         ...state,\n//         job: action.payload,\n//       };\n//       break;\n\n//     case ADD_JOB:\n//       newState = {\n//         ...state,\n//         jobs: [...state.jobs, action.payload],\n//       };\n//       break;\n\n//     case DELETE_JOB:\n//       const newJob = [...state.jobs];\n//       newJob.splice(action.payload, 1);\n//       newState = {\n//         ...state,\n//         jobs: newJob,\n//       };\n//       break;\n//     default:\n//       throw new Error(\"Invalid action\");\n//   }\n//   return newState;\n// };\n\n\n\n// //4.dispatch\n// export function TodoReducer() {\n//   //\n//   const [state, dispatch] = useReducer(reducer, initState);\n//   //destructuring \n//   const { job, jobs } = state;\n//   const inputRef = useRef();\n\n//     //\n//   const handleSubmit = () => {\n//     dispatch(addJob(job));\n//     dispatch(setJob(\"\"));\n//     inputRef.current.focus();\n//   };\n\n//   return (\n//     <div style={styleDiv}>\n//       <h3 style={title}>Todo List</h3>\n//       <input\n//         ref={inputRef}\n//         value={job}\n//         placeholder=\"Enter todo...\"\n//         onChange={(e) => {\n//           dispatch(setJob(e.target.value));\n//         }}\n//       />\n//       <button onClick={handleSubmit}>Add</button>\n//       <ul>\n//         {jobs.map((job, index) => (\n//           <li key={index}>\n//             {job}\n//             <span style={span} onClick={() => dispatch(deleteJob(index))}>&times;</span>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}
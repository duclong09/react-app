{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/main-callback-hooks.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport UseMemoCallBack from './memo-callback-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UseCallBack() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const handleIncrease = useCallback(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px 32px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(UseMemoCallBack, {\n      onIncrease: handleIncrease\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UseCallBack, \"kUcMPb82bhwqbGwucrabmKZo59Y=\");\n\n_c = UseCallBack;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCallBack\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/main-callback-hooks.js"],"names":["useCallback","useEffect","useState","UseMemoCallBack","UseCallBack","count","setCount","handleIncrease","padding"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AACA,OAAO,SAASC,WAAT,GAAsB;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMK,cAAc,GAAGP,WAAW,CAAC,MAAI,CAEtC,CAFiC,CAAlC;AAIA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAID;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAdeD,W;;KAAAA,W","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport UseMemoCallBack from './memo-callback-hooks'\nexport function UseCallBack(){\n    const [count, setCount] = useState(0)\n\n    const handleIncrease = useCallback(()=>{\n\n    }) \n\n    return(\n        <div style={{padding: '10px 32px'}}>\n            <UseMemoCallBack onIncrease = {handleIncrease}/>\n            <h1>{count}</h1>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/me/react-app/my-project/src/Hook-usereducer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\"; //useState\n//1. init state: 0 => giá trị khởi tạo\n//2. Action: hành động =>up(count + 1) / down(state - 1)\n//useReducer\n//1. init state: 0 => giá trị khởi tạo\n//2. Action: hành động =>up(count + 1) / down(state - 1)\n//3.Reducer\n//4.Dispatch\n//useState\n//const innitState = 0;\n// //Action\n// const UP_ACTION = \"up\";\n// const DOWN_ACTION = \"down\";\n// //reducer\n// const reducer = (state, action) => {\n// console.log('reducer running...')\n//   switch (action) {\n//     case UP_ACTION:\n//       return state + 1;\n//     case DOWN_ACTION:\n//       return state - 1;\n//     default:\n//       throw new Error(\"Invalid action\");\n//   }\n// };\n// export const UseReducer = () => {\n//   const [count, dispatch] = useReducer(reducer,innitState);\n//   return (\n//     <div style={{ padding: \"0 20px\" }}>\n//       <h1>{count}</h1>\n//       <button onClick={()=> dispatch(DOWN_ACTION)}>Down</button>\n//       <button onClick={()=> dispatch(UP_ACTION)}>Up</button>\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UseReducer = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count - 1),\n      children: \"Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseReducer, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = UseReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReducer\");","map":{"version":3,"sources":["/Users/me/react-app/my-project/src/Hook-usereducer.js"],"names":["useState","useReducer","UseReducer","count","setCount"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAI;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAKC,QAAQ,CAACD,KAAK,GAAE,CAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAKC,QAAQ,CAACD,KAAK,GAAE,CAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATM;;GAAMD,U;;KAAAA,U","sourcesContent":["import { useState, useReducer } from \"react\";\n\n//useState\n//1. init state: 0 => giá trị khởi tạo\n//2. Action: hành động =>up(count + 1) / down(state - 1)\n\n//useReducer\n//1. init state: 0 => giá trị khởi tạo\n//2. Action: hành động =>up(count + 1) / down(state - 1)\n//3.Reducer\n//4.Dispatch\n\n//useState\n//const innitState = 0;\n\n// //Action\n// const UP_ACTION = \"up\";\n// const DOWN_ACTION = \"down\";\n\n// //reducer\n// const reducer = (state, action) => {\n// console.log('reducer running...')\n//   switch (action) {\n//     case UP_ACTION:\n//       return state + 1;\n//     case DOWN_ACTION:\n//       return state - 1;\n//     default:\n//       throw new Error(\"Invalid action\");\n//   }\n// };\n\n// export const UseReducer = () => {\n//   const [count, dispatch] = useReducer(reducer,innitState);\n//   return (\n//     <div style={{ padding: \"0 20px\" }}>\n//       <h1>{count}</h1>\n//       <button onClick={()=> dispatch(DOWN_ACTION)}>Down</button>\n//       <button onClick={()=> dispatch(UP_ACTION)}>Up</button>\n//     </div>\n//   );\n// };\n\n\nexport const UseReducer = ()=>{\n    const [count, setCount] = useState(0)\n    return(\n        <div>\n            <h1>{count}</h1>\n            <button onClick={()=> setCount(count -1)}>Down</button>\n            <button onClick={()=> setCount(count -1)}>Down</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}